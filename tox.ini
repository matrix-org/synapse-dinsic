[tox]
envlist = packaging, py35, py36, py37, py38, py39, check_codestyle, check_isort

[base]
extras = test
deps =
    python-subunit
    junitxml
    coverage
    coverage-enable-subprocess

    # cyptography 2.2 requires setuptools >= 18.5
    #
    # older versions of virtualenv (?) give us a virtualenv with the same
    # version of setuptools as is installed on the system python (and tox runs
    # virtualenv under python3, so we get the version of setuptools that is
    # installed on that).
    #
    # anyway, make sure that we have a recent enough setuptools.
    setuptools>=18.5

    # we also need a semi-recent version of pip, because old ones fail to
    # install the "enum34" dependency of cryptography.
    pip>=10

setenv =
    PYTHONDONTWRITEBYTECODE = no_byte_code
    COVERAGE_PROCESS_START = {toxinidir}/.coveragerc

[testenv]
deps =
    {[base]deps}
extras = all, test

whitelist_externals =
    sh

setenv =
    {[base]setenv}
    postgres: SYNAPSE_POSTGRES = 1
    TOP={toxinidir}

passenv = *

commands =
    /usr/bin/find "{toxinidir}" -name '*.pyc' -delete
    # Add this so that coverage will run on subprocesses
    {envbindir}/coverage run "{envbindir}/trial" {env:TRIAL_FLAGS:} {posargs:tests} {env:TOXSUFFIX:}

# As of twisted 16.4, trial tries to import the tests as a package (previously
# it loaded the files explicitly), which means they need to be on the
# pythonpath. Our sdist doesn't include the 'tests' package, so normally it
# doesn't work within the tox virtualenv.
#
# As a workaround, we tell tox to do install with 'pip -e', which just
# creates a symlink to the project directory instead of unpacking the sdist.
#
# (An alternative to this would be to set PYTHONPATH to include the project
# directory. Note two problems with this:
#
#   - if you set it via `setenv`, then it is also set during the 'install'
#     phase, which inhibits unpacking the sdist, so the virtualenv isn't
#     useful for anything else without setting PYTHONPATH similarly.
#
#   - `synapse` is also loaded from PYTHONPATH so even if you only set
#     PYTHONPATH for the test phase, we're still running the tests against
#     the working copy rather than the contents of the sdist. So frankly
#     you might as well use -e in the first place.
#
# )
usedevelop=true

# A test suite for the oldest supported versions of Python libraries, to catch
# any uses of APIs not available in them.
[testenv:py35-old]
skip_install=True
deps =
    # Ensure a version of setuptools that supports Python 3.5 is installed.
    setuptools < 51.0.0

    # Old automat version for Twisted
    Automat == 0.3.0

    lxml
    coverage
    coverage-enable-subprocess

commands =
    /usr/bin/find "{toxinidir}" -name '*.pyc' -delete
    # Make all greater-thans equals so we test the oldest version of our direct
    # dependencies, but make the pyopenssl 17.0, which can work against an
    # OpenSSL 1.1 compiled cryptography (as older ones don't compile on Travis).
    /bin/sh -c 'python -m synapse.python_dependencies | sed -e "s/>=/==/g" -e "s/psycopg2==2.6//" -e "s/pyopenssl==16.0.0/pyopenssl==17.0.0/" | xargs -d"\n" pip install'

    # Install Synapse itself. This won't update any libraries.
    pip install -e ".[test]"

    {envbindir}/coverage run "{envbindir}/trial"  {env:TRIAL_FLAGS:} {posargs:tests} {env:TOXSUFFIX:}

[testenv:benchmark]
deps =
    {[base]deps}
    pyperf
setenv =
    SYNAPSE_POSTGRES = 1
commands =
    python -m synmark {posargs:}

[testenv:packaging]
skip_install=True
deps =
    check-manifest
commands =
    check-manifest

[testenv:check_codestyle]
extras = lint
commands =
    python -m black --check --diff .
    /bin/sh -c "flake8 synapse tests scripts scripts-dev contrib synctl {env:PEP8SUFFIX:}"
    {toxinidir}/scripts-dev/config-lint.sh

[testenv:check_isort]
extras = lint
commands = /bin/sh -c "isort -c --df --sp setup.cfg synapse tests scripts-dev scripts"

[testenv:check-newsfragment]
skip_install = True
deps = towncrier>=18.6.0rc1
commands =
   python -m towncrier.check --compare-with=origin/dinsic

[testenv:check-sampleconfig]
commands = {toxinidir}/scripts-dev/generate_sample_config --check

[testenv:combine]
skip_install = True
deps =
    coverage
commands=
    coverage combine
    coverage report

[testenv:cov-erase]
skip_install = True
deps =
    coverage
commands=
    coverage erase

[testenv:cov-html]
skip_install = True
deps =
    coverage
commands=
    coverage html

[testenv:mypy]
deps =
    {[base]deps}
extras = all,mypy
commands = mypy

# To find all folders that pass mypy you run:
#
#   find synapse/* -type d -not -name __pycache__ -exec bash -c "mypy '{}' > /dev/null"  \; -print
